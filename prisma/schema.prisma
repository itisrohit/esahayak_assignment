// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum for city options
enum City {
  Chandigarh
  Mohali
  Zirakpur
  Panchkula
  Other
}

// Enum for property types
enum PropertyType {
  Apartment
  Villa
  Plot
  Office
  Retail
}

// Enum for BHK options
enum BHK {
  ONE
  TWO
  THREE
  FOUR
  Studio
}

// Enum for purpose options
enum Purpose {
  Buy
  Rent
}

// Enum for timeline options
enum Timeline {
  ZERO_TO_THREE_M
  THREE_TO_SIX_M
  GREATER_THAN_SIX_M
  Exploring
}

// Enum for source options
enum Source {
  Website
  Referral
  Walk_in
  Call
  Other
}

// Enum for buyer status
enum BuyerStatus {
  New
  Qualified
  Contacted
  Visited
  Negotiation
  Converted
  Dropped
}

// Model for buyers (leads)
model Buyer {
  id          String      @id @default(uuid())
  fullName    String      @db.VarChar(80)
  email       String?     @db.VarChar(255)
  phone       String      @db.VarChar(15)
  city        City
  propertyType PropertyType
  bhk         BHK?
  purpose     Purpose
  budgetMin   Int?
  budgetMax   Int?
  timeline    Timeline
  source      Source
  status      BuyerStatus @default(New)
  notes       String?     @db.Text
  tags        String[]
  ownerId     String      @db.VarChar(255)
  updatedAt   DateTime    @default(now())
  createdAt   DateTime    @default(now())
  history     BuyerHistory[]

  @@index([phone])
  @@index([email])
  @@index([ownerId])
  @@index([status])
  @@index([city])
  @@index([propertyType])
}

// Model for buyer history
model BuyerHistory {
  id        String    @id @default(uuid())
  buyerId   String
  changedBy String    @db.VarChar(255)
  changedAt DateTime  @default(now())
  diff      Json
  buyer     Buyer     @relation(fields: [buyerId], references: [id])

  @@index([buyerId])
  @@index([changedBy])
  @@index([changedAt])
}
